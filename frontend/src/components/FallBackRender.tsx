import { useEffect } from "react";
import { FontAwesomeIcon } from "@fortawesome/react-fontawesome";
import { faExclamationCircle } from "@fortawesome/free-solid-svg-icons";
import useBugReport from "@/hooks/useBugReport";
import { BugReportSubmission } from "@/models/Bugs";
import BugReport from "./bugsReport/BugReport";

export function FallBackRender({ error, resetErrorBoundary }: { error: Error; resetErrorBoundary: () => void }) {
  const {
    actions: { addBug },
  } = useBugReport();
  useEffect(() => {
    setTimeout(() => {
      resetErrorBoundary();
    }, 5000);
  }, []);
  useEffect(() => {
    const bug: BugReportSubmission = {
      type: "Bug",
      notificationMethod: "None",
      title: "Error",
      description: error.toString(),
      autoGenerated: true,
    };
    addBug(bug);
    // eslint-disable-next-line react-hooks/exhaustive-deps
  }, [error]);
  return (
    <div className="flex  h-[100vh] items-center  mt-40 flex-col gap-2">
      <FontAwesomeIcon icon={faExclamationCircle} className="text-red-500 text-4xl" />
      <p className=" text-2xl font-bold">Something went wrong</p>
      <p className="text-lg">There was a problem processing this request please try again later</p>
      <p className=" text-xs  opacity-60">Page will be reloaded in 5 seconds</p>
      <BugReport />
    </div>
  );
}
